generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type CorrectWord {
  word      String
  isProfane Boolean
  isPangram Boolean
  points    Int
}

model Word {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  word      String  @unique
  isProfane Boolean @default(false)
  Game      Game?   @relation(fields: [gameId], references: [id])
  gameId    String? @db.ObjectId
}

model Player {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String          @unique
  password       String?
  cookie         String?         @unique
  games          PlayerGame[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  PlayerSettings PlayerSettings?
}

model Game {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  letters      String[]
  centerLetter String
  enteredWords String[]
  correctWords CorrectWord[]
  maximumScore Int
  score        Int           @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  players      PlayerGame[]
  Word         Word[]
}

model PlayerGame {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  playerId String @db.ObjectId
  gameId   String @db.ObjectId

  player Player @relation(fields: [playerId], references: [id], onDelete: Cascade)
  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@unique([playerId, gameId])
  @@index([gameId])
}

model PlayerSettings {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  playerId        String   @db.ObjectId
  profanesAllowed Boolean  @default(false)
  wordListSortBy  String   @default("ALPHABETICAL")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  player Player @relation(fields: [playerId], references: [id], onDelete: Cascade)

  @@unique([playerId])
}
